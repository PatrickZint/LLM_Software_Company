Based upon your refined goals and environment profile we can now move forward with detailed system specifications including functional requirements, non-functional requirements as well recommendations for high level design documents based off of these functionalities : 
  
Functional Requirements (FR):
1 FR01 User Registration & Login Functionality - The software shall provide a mechanism to register an account by providing necessary details and also allow registered users login. It should have options like username/email id, password along with optional features such as bio profile picture etc., Users must be able confirm whether their posts are created successfully or not after submission process ends due potentially occurring server issues..
2 FR02 Create a Blog Post - After logged-in the user shall possess an option to create new blog post by providing title and body content which can include text/images as well, along with tags that aids in finding relevant blogs. Users must be able confirm whether their posts are created successfully or not after submission process ends due potentially occurring server issues..
3 FR03 Comment System - Each post shall have an integrated commenting system where authenticated user could type comments related to this blog and edit/delete only theirs comment but cannot modify others's one unless authorized by owner. 
4 FR04 User Profile Management- Registered users must be able view & manage their own profile (edit details like username, email id etc.), except password which should remain hidden for security purpose . Users also need an option to delete the account permanently with all related data on this platform including posts and comments created by them beforehand.
5 FR05 Search Functionality - The software shall implement a powerful search bar that can find blog post based upon tags or keywords used within those articles as well it should have user friendly highlighting feature for better readability of matched terms in results.. 
6 FR06 Blog Post Viewing- Any registered users (or even public without registration) must be able view individual blogs by clicking on title from homepage / search result page etc.  
7 FR07 User Following/Follower System - Allow blogging community to follow otherâ€™s blog posts or get notifications when new post is published, this system should also track how many followers a user has and allow users themselves choose whether they want their each activity like publishing of any article visible on profile for all others.
8 FR08 Blog Post Editing/Deletion - User must be able to edit & delete previously created blog posts but only if not yet published, once post is live i.e., public viewable then this option should become disabled (unless by admin).. 
9 FR09 Privacy Settings- Users may choose whether their profile and associated information(like email etc) will remain private or publicly visible for others..  
10 FR10 Blog Post Like/Dislike - Implement a feature that allows users to like / dislike posts. This feedback could be useful in understanding the popularity of different blog entries, as well helping other readers decide which ones might interest them most! 
   
Non-Functional Requirements (NFR):  
1 NFR01 Performance: The software should perform efficiently and effectively without significant delays or performance issues even with high traffic. This includes loading speed for initial access to the platform/application, response times etc..    
2 NFR02 Security - All user data must be securely stored & transmitted; authentication mechanisms shall prevent unauthorized users from gaining entry into system ; all transactions should maintain secure and encrypted communication . 
3 NFR03 Usability: The software interface design needs to provide an intuitive experience for the end-user. It is designed with a focus on simplicity, clarity of functions/actions needed by user..  
4 NFR04 Availability - System downtime must be minimized; system should have capability and measures in place that ensure it can withstand hardware failures or other potential disruptions without causing any significant impact to its operations., 5NFR User Interface: The software application shall provide an easy-to-use graphical user interface (GUI) for interaction.
  
System Design Recommendations : Based on the above functionalities, a three layered architecture could be considered where you have presentation layer that interacts with users through GUI , business logic implemented in middle tier and finally database at lower level which stores data persistently..  For managing large scale blogging platforms or any high traffic applications consider using distributed systems. Also for real-time notifications use WebSockets to provide push functionality, if needed implement caching mechanisms such as Redis & Memcached can also be considered based on need of application,.
Finally in order not only meet the requirements but exceed them you may want look into microservices architecture or serverless approach depending upon complexity and scalability needs.  Also consider automating tests (unit testing/integration testing) to ensure code quality, along with continuous integration pipelines for better development practices..   Again these recommendations can be modified based on specific application need & technical expertise available within team implementing the system!
